name: Trading Cron Jobs

on:
  schedule:
    # 20秒指标收集 - 每1分钟执行一次
    - cron: '*/1 * * * *'
    # 3分钟交易执行 - 每3分钟执行一次  
    - cron: '*/3 * * * *'
  # 允许手动触发用于测试
  workflow_dispatch:

jobs:
  metrics-interval:
    name: 20秒指标收集
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '*/1 * * * *'
    
    steps:
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: 验证环境变量
        run: |
          echo "检查必需的环境变量..."
          if [ -z "${{ secrets.CRON_SECRET_KEY }}" ]; then
            echo "❌ CRON_SECRET_KEY 未设置"
            exit 1
          fi
          if [ -z "${{ secrets.NEXT_PUBLIC_URL }}" ]; then
            echo "❌ NEXT_PUBLIC_URL 未设置"
            exit 1
          fi
          echo "✅ 环境变量检查通过"
          
      - name: 生成JWT Token并执行指标收集
        env:
          CRON_SECRET_KEY: ${{ secrets.CRON_SECRET_KEY }}
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
        run: |
          # 安装 jsonwebtoken
          npm install jsonwebtoken
          
          # 生成JWT token
          JWT_TOKEN=$(node -e "
            const jwt = require('jsonwebtoken');
            const secretKey = process.env.CRON_SECRET_KEY;
            if (!secretKey) {
              console.error('CRON_SECRET_KEY is empty');
              process.exit(1);
            }
            const token = jwt.sign(
              { sub: 'github-actions-cron' },
              secretKey,
              { expiresIn: '1h' }
            );
            console.log(token);
          ")
          
          echo "生成的JWT Token: ${JWT_TOKEN:0:20}..."
          
          # 调用API
          echo "调用API: ${NEXT_PUBLIC_URL}/api/cron/20-seconds-metrics-interval"
          curl -X GET \
            "${NEXT_PUBLIC_URL}/api/cron/20-seconds-metrics-interval?token=${JWT_TOKEN}" \
            -H "Content-Type: application/json" \
            -w "\nHTTP Status: %{http_code}\n"

  run-interval:
    name: 3分钟交易执行
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && github.event.schedule == '*/3 * * * *'
    
    steps:
      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: 验证环境变量
        run: |
          echo "检查必需的环境变量..."
          if [ -z "${{ secrets.CRON_SECRET_KEY }}" ]; then
            echo "❌ CRON_SECRET_KEY 未设置"
            exit 1
          fi
          if [ -z "${{ secrets.NEXT_PUBLIC_URL }}" ]; then
            echo "❌ NEXT_PUBLIC_URL 未设置"
            exit 1
          fi
          echo "✅ 环境变量检查通过"
          
      - name: 生成JWT Token并执行交易逻辑
        env:
          CRON_SECRET_KEY: ${{ secrets.CRON_SECRET_KEY }}
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
        run: |
          # 安装 jsonwebtoken
          npm install jsonwebtoken
          
          # 生成JWT token
          JWT_TOKEN=$(node -e "
            const jwt = require('jsonwebtoken');
            const secretKey = process.env.CRON_SECRET_KEY;
            if (!secretKey) {
              console.error('CRON_SECRET_KEY is empty');
              process.exit(1);
            }
            const token = jwt.sign(
              { sub: 'github-actions-cron' },
              secretKey,
              { expiresIn: '1h' }
            );
            console.log(token);
          ")
          
          echo "生成的JWT Token: ${JWT_TOKEN:0:20}..."
          
          # 调用API
          echo "调用API: ${NEXT_PUBLIC_URL}/api/cron/3-minutes-run-interval"
          curl -X GET \
            "${NEXT_PUBLIC_URL}/api/cron/3-minutes-run-interval?token=${JWT_TOKEN}" \
            -H "Content-Type: application/json" \
            -w "\nHTTP Status: %{http_code}\n"